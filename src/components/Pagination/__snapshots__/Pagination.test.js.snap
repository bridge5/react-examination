// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pagination feature render Paginator correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_default
    changePage={[MockFunction]}
    currentPageIndex={1}
    totalPageIndex={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="btn btn-default"
          onClick={[Function]}
        >
          «
        </button>,
        <button
          className="btn btn-default"
        >
          2
        </button>,
        <button
          className="btn btn-default"
          onClick={[Function]}
        >
          »
        </button>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "«",
          "className": "btn btn-default",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "«",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 2,
          "className": "btn btn-default",
        },
        "ref": null,
        "rendered": 2,
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "»",
          "className": "btn btn-default",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "»",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="btn btn-default"
            onClick={[Function]}
          >
            «
          </button>,
          <button
            className="btn btn-default"
          >
            2
          </button>,
          <button
            className="btn btn-default"
            onClick={[Function]}
          >
            »
          </button>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "«",
            "className": "btn btn-default",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "«",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 2,
            "className": "btn btn-default",
          },
          "ref": null,
          "rendered": 2,
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "»",
            "className": "btn btn-default",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "»",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
